/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.47
 * Generated at: 2025-10-22 22:48:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.Admin.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<div class=\"container-fluid\">\n");
      out.write("    <h4 class=\"mb-4\">Tổng quan hệ thống</h4>\n");
      out.write("\n");
      out.write("    <div class=\"row g-3\">\n");
      out.write("        <div class=\"col-md-3\">\n");
      out.write("            <div class=\"card shadow-sm text-center p-3\">\n");
      out.write("                <i class=\"bi bi-cart-check display-6 text-primary\"></i>\n");
      out.write("                <h6 class=\"mt-2\">Đơn hàng hôm nay</h6>\n");
      out.write("                <h3 class=\"fw-bold text-dark\">128</h3>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-3\">\n");
      out.write("            <div class=\"card shadow-sm text-center p-3\">\n");
      out.write("                <i class=\"bi bi-people-fill display-6 text-success\"></i>\n");
      out.write("                <h6 class=\"mt-2\">Người dùng mới</h6>\n");
      out.write("                <h3 class=\"fw-bold text-dark\">35</h3>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-3\">\n");
      out.write("            <div class=\"card shadow-sm text-center p-3\">\n");
      out.write("                <i class=\"bi bi-shop display-6 text-warning\"></i>\n");
      out.write("                <h6 class=\"mt-2\">Cửa hàng hoạt động</h6>\n");
      out.write("                <h3 class=\"fw-bold text-dark\">67</h3>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-3\">\n");
      out.write("            <div class=\"card shadow-sm text-center p-3\">\n");
      out.write("                <i class=\"bi bi-cash-coin display-6 text-danger\"></i>\n");
      out.write("                <h6 class=\"mt-2\">Doanh thu hôm nay</h6>\n");
      out.write("                <h3 class=\"fw-bold text-dark\">42.5M₫</h3>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"card mt-4 p-4\">\n");
      out.write("        <h5 class=\"mb-3\"><i class=\"bi bi-bar-chart\"></i> Biểu đồ doanh thu 7 ngày</h5>\n");
      out.write("        <canvas id=\"chartRevenue\" height=\"120\"></canvas>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        new Chart(document.getElementById(\"chartRevenue\"), {\n");
      out.write("            type: \"line\",\n");
      out.write("            data: {\n");
      out.write("                labels: [\"T2\",\"T3\",\"T4\",\"T5\",\"T6\",\"T7\",\"CN\"],\n");
      out.write("                datasets: [{\n");
      out.write("                    label: \"Doanh thu (triệu ₫)\",\n");
      out.write("                    data: [12, 15, 11, 9, 18, 20, 14],\n");
      out.write("                    borderColor: \"#2563eb\",\n");
      out.write("                    backgroundColor: \"rgba(37,99,235,0.1)\",\n");
      out.write("                    fill: true,\n");
      out.write("                    tension: 0.4\n");
      out.write("                }]\n");
      out.write("            },\n");
      out.write("            options: { plugins: { legend: { display: false } } }\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</div>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
